buildscript {
    repositories {
        jcenter()
        maven { url 'http://repo.spring.io/snapshot' }
        maven { url 'http://repo.spring.io/milestone' }
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.0.0.BUILD-SNAPSHOT'
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'eclipse' // 이클립스 IDE를 위한 설정 파일을 생성하기 위해 플러그인 추가
apply plugin: 'application'

jar { // jar 파일을 만들 때 사용할 정보 
    baseName = 'myproject'
    version =  '0.0.1-SNAPSHOT'
}

repositories {  // 의존 라이브러리를 다운 받기 위해 사용할 서버 정보 
    jcenter()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
}

dependencies { // 다운로드 받을 의존 라이브러리 목록
    // compile => 빌드(컴파일,JAR 파일 생성 등)할 때 사용할 라이브러리 
    compile("org.springframework.boot:spring-boot-starter-web")
    
    // JSP 기반 Spring MVC를 사용하려면 다음 두 개의 라이브러리를 추가해야 한다.
    // 1) JSP를 처리해주는 톰캣 JSP 엔진 추가
    compile("org.apache.tomcat.embed:tomcat-embed-jasper");
    // 2) JSTL 라이브러리 추가
    compile group: 'javax.servlet', name: 'jstl', version: '1.2'


    // mybatis가 spring-jdbc 등의 라이브러리를 사용하기 때문에 자동으로 가져온다.
    // 그래서 mybatis starter를 지정할 때는 jdbc starter를 빼도 된다.
    //compile("org.springframework.boot:spring-boot-starter-jdbc")
    
    // 스프링 부트 스타터가 없는 라이브러리는 직접 해당 라이브러리를 지정하면 된다.
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.43'

    // mybatis 관련 라이브러리를 가져오는 부트 스타터이다.
    compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0")
    
    // 이메일 발송 관련 라이브러리를 가져오는 부트 스타터이다.
    compile("org.springframework.boot:spring-boot-starter-mail")
    
    // Google JSON 라이브러리 
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.1'
    
    //Aws IoT 라이브러리
	compile group: 'com.amazonaws', name: 'aws-iot-device-sdk-java', version: '1.1.1'
	
	//Aws IoT 예제
	  compile group: 'com.amazonaws', name: 'aws-iot-device-sdk-java-samples', version: '1.1.1'
    
    // testCompile => 테스트할 때 사용할 라이브러리 
    testCompile("org.springframework.boot:spring-boot-starter-test")
    
    compile("org.springframework.boot:spring-boot-devtools")
}

compileJava { // 자바 컴파일러에게 전달하는 정보. 
  options.encoding = 'UTF-8'  // 자바 소스 파일의 인코딩 정보 
  sourceCompatibility = '1.8' // 소스 코드의 자바 버전 
}

// "gradle bootRun" 명령을 실행할 때 사용할 메인 클래스를 지정한다.
bootRun {
  main = 'bigdata3.Application'
}






